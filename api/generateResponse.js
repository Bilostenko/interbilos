import OpenAI from "openai";
const openai = new OpenAI();

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  const { summary, verificationData } = req.body;

  try {
    const prompt = `
–¢–∏ –ø–æ–º—ñ—á–Ω–∏–∫, —è–∫–∏–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –ø–µ—Ä–µ–∫–∞–∑—É –∑–∞–ø–∏—Ç—É (summary) —ñ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö (manualData) —Å—Ç–≤–æ—Ä—é—î —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π JSON –¥–ª—è Word-–¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.

–¢–∏ –º–∞—î—à –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –í–ò–ö–õ–Æ–ß–ù–û –≤–∞–ª—ñ–¥–Ω–∏–π JSON –±–µ–∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤.

JSON –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –∫–ª—é—á—ñ:
{
  "sender": "...",
  "reference": "...",
  "date": "...",
  "name": "...",
  "date_of_birth": "...",
  "residence_address": "...",
  "passport": "...",
  "criminal_records": "...",
  "additional_info": "...",
  "delete_photo": true/false,
  "delete_border": true/false,
  "attachment_count": 0 | 1 | 2 | 3
}

–ü–æ—è—Å–Ω–µ–Ω–Ω—è:

1Ô∏è‚É£ "sender": –ù–∞–∑–≤–∞ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –±—é—Ä–æ –Ü–Ω—Ç–µ—Ä–ø–æ–ª—É. –Ø–∫ –ø—Ä–∞–≤–∏–ª–æ ‚Äî —Ü–µ –Ω–∞–∑–≤–∞ —Å—Ç–æ–ª–∏—Ü—ñ –∫—Ä–∞—ó–Ω–∏, –∑ —è–∫–æ—ó –ø—Ä–∏–π—à–æ–≤ –∑–∞–ø–∏—Ç.
- –Ø–∫—â–æ –≤ –Ω–∞–∑–≤—ñ —î —Å–ª–æ–≤–æ INTERPOL (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "INTERPOL BUDAPEST") ‚Äî –π–æ–≥–æ —Ç—Ä–µ–±–∞ –≤–∏–¥–∞–ª–∏—Ç–∏.
- –§–æ—Ä–º–∞—Ç: TO: IP [–º—ñ—Å—Ç–æ –≤–µ–ª–∏–∫–∏–º–∏ –ª—ñ—Ç–µ—Ä–∞–º–∏], –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: TO: IP BUDAPEST

–ü–µ—Ä–µ–∫–ª–∞–¥–∏ –∫—Ä–∞—ó–Ω—É –Ω–∞ –Ω–∞–∑–≤—É –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –±—é—Ä–æ –Ü–Ω—Ç–µ—Ä–ø–æ–ª—É:
  * –£–ì–û–†–©–ò–ù–ê ‚Üí BUDAPEST
  * –ù–Ü–ú–ï–ß–ß–ò–ù–ê ‚Üí WIESBADEN
  * –Ü–¢–ê–õ–Ü–Ø ‚Üí ROME
  * –§–†–ê–ù–¶–Ü–Ø ‚Üí PARIS
  * –Ü–°–ü–ê–ù–Ü–Ø ‚Üí MADRID
  * –ü–û–õ–¨–©–ê ‚Üí WARSAW

2Ô∏è‚É£ "reference": –ª–∏—à–µ –Ω–æ–º–µ—Ä –∑–∞–ø–∏—Ç—É (–±–µ–∑ "YOUR REF:"), –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: BMWP-34489/2023/I-11

3Ô∏è‚É£ "date": –¥–∞—Ç–∞ –∑–∞–ø–∏—Ç—É —É —Ñ–æ—Ä–º–∞—Ç—ñ –î–î/–ú–ú/–†–†–†–†. –Ø–∫—â–æ –Ω–µ–º–∞—î ‚Äî –ø–æ–≤–µ—Ä–Ω–∏ "UNKNOWN".

üß© –£ —à–∞–±–ª–æ–Ω—ñ –∑ —Ü—å–æ–≥–æ –±—É–¥–µ —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–æ:  
"YOUR REF: [reference] dated [date]"

4Ô∏è‚É£ "name":  
- –§–æ—Ä–º–∞—Ç: –ü—Ä—ñ–∑–≤–∏—â–µ –≤–µ–ª–∏–∫–∏–º–∏ –ª—ñ—Ç–µ—Ä–∞–º–∏ f/n –Ü–º º—è s/o –ü–æ-–±–∞—Ç—å–∫–æ–≤—ñ.
- –î–∂–µ—Ä–µ–ª–æ: manualData ‚Üí summary

5Ô∏è‚É£ "date_of_birth", "residence_address", "passport", "criminal_records", "additional_info":
- –°–ø–æ—á–∞—Ç–∫—É –±–µ—Ä–∏ –∑ manualData, —è–∫—â–æ –Ω–µ–º–∞—î ‚Äî –∑ summary. –Ø–∫—â–æ –Ω–µ–º–∞—î ‚Äî "–ù–µ–º–∞—î".

6Ô∏è‚É£ "delete_photo":
- –Ø–∫—â–æ manualData.photo === false (—Ç–æ–±—Ç–æ —á–µ–∫–±–æ–∫—Å –Ω–µ –±—É–≤ –≤–∏–±—Ä–∞–Ω–∏–π), —Ç–æ–¥—ñ delete_photo = true ‚Üí —Ä—è–¥–æ–∫ PHOTO –≤–∏–¥–∞–ª—è—î—Ç—å—Å—è –∑ Word-–¥–æ–∫—É–º–µ–Ω—Ç–∞
- –Ø–∫—â–æ manualData.photo === true ‚Äî —Ç–æ–¥—ñ delete_photo = false ‚Üí PHOTO –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è

7Ô∏è‚É£ "delete_border":
- –ê–Ω–∞–ª–æ–≥—ñ—á–Ω–æ –¥–æ —Ñ–æ—Ç–æ.

8Ô∏è‚É£ "attachment_count": –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–∞–π–ª—ñ–≤, —è–∫—ñ –±—É–¥—É—Ç—å –∑–≥–∞–¥–∞–Ω—ñ –≤ –∫—ñ–Ω—Ü—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (Attachment):
- –Ø–∫—â–æ delete_photo = false ‚Üí +1
- –Ø–∫—â–æ delete_border = false ‚Üí +1
- –¢–æ–±—Ç–æ:
  - —è–∫—â–æ –æ–±–∏–¥–≤–∞ delete_* = true ‚Üí attachment_count = 0 (—Ä—è–¥–æ–∫ Attachment —Ç—Ä–µ–±–∞ –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–∏—Ç–∏)
  - —è–∫—â–æ –ª–∏—à–µ —Ñ–æ—Ç–æ ‚Üí 1 (1 —Ñ–æ—Ç–æ)
  - —è–∫—â–æ –ª–∏—à–µ –±–æ—Ä–¥–µ—Ä ‚Üí 2 (—Ç—ñ–ª–æ + 1 –¥–æ–¥–∞—Ç–æ–∫)
  - —è–∫—â–æ –æ–±–∏–¥–≤–∞ ‚Üí 3 (—Ç—ñ–ª–æ + —Ñ–æ—Ç–æ + –±–æ—Ä–¥–µ—Ä)

üìå –£ Word-–¥–æ–∫—É–º–µ–Ω—Ç—ñ:
- –Ø–∫—â–æ "delete_photo": true ‚Üí –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–∏—Ç–∏ —Ä—è–¥–æ–∫: PHOTO: in attachment
- –Ø–∫—â–æ "delete_border": true ‚Üí –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–∏—Ç–∏ —Ä—è–¥–æ–∫: BORDER RECORD: in attachment with the legend for translation
- –Ø–∫—â–æ attachment_count = 0 ‚Üí –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–∏—Ç–∏ —Ä—è–¥–æ–∫ Attachment

–ù–ï –¥–æ–¥–∞–≤–∞–π –Ω—ñ—á–æ–≥–æ –ø–æ–∑–∞ JSON.

–î–∞–Ω—ñ –¥–ª—è –æ–±—Ä–æ–±–∫–∏:

{
  "summary": ${JSON.stringify(summary, null, 2)},
  "manualData": ${JSON.stringify(verificationData, null, 2)}
}
`.trim();

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [{ role: "user", content: prompt }],
      temperature: 0.2,
    });

    const jsonResponse = completion.choices[0].message.content;
    res.status(200).json({ response: JSON.parse(jsonResponse) });
  } catch (error) {
    console.error("OpenAI error:", error);
    res.status(500).json({ error: "Failed to generate response" });
  }
}
